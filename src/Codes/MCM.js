var MatrixCM = "var M, S;\n\nasync function MCM(p) {\n    var n = p.length\n\n    let tmp = new Array(n);\n    M = new Array(n);\n    S = new Array(n);\n\n    for (let i=0;i<n;++i){\n        M[i] = new Array(n);\n        S[i] = new Array(n);\n        for (let j=0;j<n;++j){\n            M[i][j] = 0;\n            S[i][j] = 0;\n        }\n    }\n\n    console.table(M);\n\n    for (let l=2;l<n;++l){\n        for (let i=1;i<(n-l+1);++i){\n            let j = l + i - 1;\n            M[i][j] = Number.POSITIVE_INFINITY;\n            for(let k=i;k<j;++k){\n                let q = M[i][k] + M[k+1][j] + (p[i-1]*p[k]*p[j]);\n                // console.table(M);\n                // console.log(\"i\"+ i + \"j\" + j + \"q = \" + q)\n                if (q < M[i][j]){\n                    M[i][j] = q;\n                    S[i][j] = k;\n                }\n            }\n        }\n    }\n}\n\nasync function PrintMCS (i,j){\n    if(i == j){\n        process.stdout.write(\"A\" + i);\n    }\n    else {\n        process.stdout.write('(');\n        await PrintMCS(i,S[i][j]);\n        await PrintMCS(S[i][j]+1, j);\n        process.stdout.write(')');\n    }\n}\n\n(async () => {\n    var p = [1,2,3,4];\n    await MCM(p);\n    console.table(M);\n    console.table(S);\n    await PrintMCS(0,3);\n})();\n"

module.exports(MatrixCM);